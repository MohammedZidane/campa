[pytest]
filterwarnings =
    ignore:the imp module is deprecated:DeprecationWarning
    ignore:'contextfilter':DeprecationWarning
    ignore:distutils:DeprecationWarning
    ignore:Please use `spmatrix`:DeprecationWarning
    ignore:Passing a schema to Validator.iter_errors:DeprecationWarning
    ignore:Please use:DeprecationWarning
    ignore:'plotting' is not a valid key!:SyntaxWarning
    ignore:Transforming to str index.:anndata.ImplicitModificationWarning

addopts = --cov=campa

[doc8]
max-line-length = 120
ignore-path = .tox,docs/source/api,squidpy.egg-info,dist,build
quiet = 1

[flake8]
per-file-ignores =
    */__init__.py: D104, F401, I252
    tests/*: D, PT019
    docs/*: D,B
    notebooks/*: E402, E501, D100
    campa/pl/*: D
# E402 module level import not at top of file
# E501 line too long
# D104 Missing docstring in public package
# F401 ... imported but unused
# D100 Missing docstring in public module
# D200 One-line docstring should fit on one line with quotes

# D100 D100 Missing docstring in public module
# D107 Missing docstring in __init__
# B008 Do not perform function calls in argument defaults.
# W503 line break before binary operator
# D105 Missing docstring in magic method
# E203 whitespace before ':'
# P101 format string does contain unindexed parameters
# PT019 fixture _ensure_test_data without value is injected as parameter, use @pytest.mark.usefixtures instead

# docrep interferences:
# RST201 Block quote ends without a blank line; unexpected unindent.
# RST301 Unexpected indentation.
# RST306 Unknown target name:
# RST203 Definition list ends without a blank line; unexpected unindent.
ignore = E203, D200, D #100,D107,B008,W503,D105,E203,P101,RST201,RST301,RST306,RST203
exclude =
    .git
    .tox
    build
    dist
    __pycache__
    setup.py
max_line_length = 120
filename = *.py
ban-relative-imports = true
rst-roles =
    mod
    class
    meth
    func
    attr
    paramref
    ref
    cite
rst-directives =
    envvar
    exception

[coverage:run]
omit = */__init__.py
branch = true
parallel = true
source = campa

[coverage:report]
show_missing = true
precision = 2
skip_empty = True
sort = Cover

[tox]
envlist =
    py39
    lint

[testenv]
deps =
    pytest
    pytest-xdist
    pytest-cov
    pytest-dependency
    nbconvert
    ipykernel
commands = pytest

[testenv:lint]
description = Perform linting.
basepython = python3.9
deps = pre-commit>=2.9.3
skip_install = true
commands = pre-commit run --all-files {posargs:}  # --show-diff-on-failure


[testenv:clean-docs]
description = Clean the documentation artifacts.
basepython = python3.9
deps =
skip_install = true
changedir = {toxinidir}/docs
whitelist_externals = make
commands = make clean

[testenv:check-docs]
description = Check whether the links in the documentation are valid.
basepython = python3.9
deps = -r{toxinidir}/docs/requirements.txt
skip_install = true
whitelist_externals = sphinx-build
commands =
    #sphinx-build -W --keep-going -b spelling {toxinidir}/docs/source {toxinidir}/docs/build/spellcheck
    sphinx-build -q -W --keep-going -b linkcheck {toxinidir}/docs/source {toxinidir}/docs/build/linkcheck

[testenv:docs]
description = Build the documentation.
basepython = python3.9
skip_install = true
deps = -r{toxinidir}/docs/requirements.txt
whitelist_externals = sphinx-build
commands =
    sphinx-build --color -b html {toxinidir}/docs/source {toxinidir}/docs/build/html
    python -c 'import pathlib; print(f"Documentation is available under:", pathlib.Path(f"{toxinidir}") / "docs" / "build" / "html" / "index.html")'
